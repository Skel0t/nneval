fn @print_matrix(mat: Matrix) -> () {
    for _acc, val, _r, c, chn in iterate_matrix_hwc(mat) {
        print_f32(val); print_string("\t");
        if c == mat.cols - 1 && chn == mat.channels - 1 {
            print_string("\n");
        }
    }
}

fn @print_sparse_content(mat: Sparse) -> () {
    for _acc, val, _i, _r, c in iterate_sparse(mat) {
        print_f32(val); print_string("\t");
        if c == mat.cols - 1 {
            print_string("\n");
        }
    }
}

fn @print_sparse_indizes(mat: Sparse) -> () {
    for _acc, _val, i, _r, c in iterate_sparse(mat) {
        print_i32(i); print_string("\t");
        if c == mat.cols - 1 {
            print_string("\n");
        }
    }
}